[{"/home/anderson/blog/client/src/index.js":"1","/home/anderson/blog/client/src/App.js":"2","/home/anderson/blog/client/src/reportWebVitals.js":"3","/home/anderson/blog/client/src/components/Home.js":"4","/home/anderson/blog/client/src/components/auth/Registro.js":"5","/home/anderson/blog/client/src/components/auth/Login.js":"6","/home/anderson/blog/client/src/components/Navbar.js":"7","/home/anderson/blog/client/src/components/auth/BgImage.js":"8","/home/anderson/blog/client/src/store/index.js":"9","/home/anderson/blog/client/src/store/reducers/AuthReducer.js":"10","/home/anderson/blog/client/src/store/asyncMethods/AuthMethods.js":"11","/home/anderson/blog/client/src/components/Dashboard.js":"12","/home/anderson/blog/client/src/store/tipos/userTypes.js":"13","/home/anderson/blog/client/src/privado/PrivateRoute.js":"14","/home/anderson/blog/client/src/privado/RouteLinks.js":"15","/home/anderson/blog/client/src/components/NotFound.js":"16","/home/anderson/blog/client/src/components/Create.js":"17","/home/anderson/blog/client/src/store/asyncMethods/PostMethods.js":"18","/home/anderson/blog/client/src/store/tipos/PostTypes.js":"19","/home/anderson/blog/client/src/store/reducers/PostReducer.js":"20","/home/anderson/blog/client/src/components/SideBar.js":"21","/home/anderson/blog/client/src/components/Pagination.js":"22","/home/anderson/blog/client/src/components/Edit.js":"23","/home/anderson/blog/client/src/components/Loader.js":"24","/home/anderson/blog/client/src/components/EditImge.js":"25","/home/anderson/blog/client/src/components/UpdateName.js":"26","/home/anderson/blog/client/src/store/reducers/ProfileReducer.js":"27","/home/anderson/blog/client/src/store/asyncMethods/ProfileMethods.js":"28","/home/anderson/blog/client/src/store/tipos/ProfileTipos.js":"29","/home/anderson/blog/client/src/components/ChangePassword.js":"30","/home/anderson/blog/client/src/components/Details.js":"31"},{"size":268,"mtime":1612189570210,"results":"32","hashOfConfig":"33"},{"size":1725,"mtime":1619703503637,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1612187771852,"results":"35","hashOfConfig":"33"},{"size":3711,"mtime":1619708623228,"results":"36","hashOfConfig":"33"},{"size":3090,"mtime":1619315147766,"results":"37","hashOfConfig":"33"},{"size":2806,"mtime":1612915702229,"results":"38","hashOfConfig":"33"},{"size":1531,"mtime":1618405217176,"results":"39","hashOfConfig":"33"},{"size":105,"mtime":1612402314038,"results":"40","hashOfConfig":"33"},{"size":679,"mtime":1618880811133,"results":"41","hashOfConfig":"33"},{"size":1478,"mtime":1618510170456,"results":"42","hashOfConfig":"33"},{"size":1488,"mtime":1618422820336,"results":"43","hashOfConfig":"33"},{"size":4159,"mtime":1619708955372,"results":"44","hashOfConfig":"33"},{"size":248,"mtime":1612914040333,"results":"45","hashOfConfig":"33"},{"size":370,"mtime":1612880169104,"results":"46","hashOfConfig":"33"},{"size":379,"mtime":1612880285461,"results":"47","hashOfConfig":"33"},{"size":536,"mtime":1612882248016,"results":"48","hashOfConfig":"33"},{"size":8324,"mtime":1619315021759,"results":"49","hashOfConfig":"33"},{"size":4088,"mtime":1619707793426,"results":"50","hashOfConfig":"33"},{"size":885,"mtime":1619704228296,"results":"51","hashOfConfig":"33"},{"size":2680,"mtime":1619704590460,"results":"52","hashOfConfig":"33"},{"size":526,"mtime":1619471699154,"results":"53","hashOfConfig":"33"},{"size":1143,"mtime":1619702556596,"results":"54","hashOfConfig":"33"},{"size":5540,"mtime":1618602588446,"results":"55","hashOfConfig":"33"},{"size":197,"mtime":1618598709056,"results":"56","hashOfConfig":"33"},{"size":3927,"mtime":1618756105157,"results":"57","hashOfConfig":"33"},{"size":3060,"mtime":1619395131232,"results":"58","hashOfConfig":"33"},{"size":434,"mtime":1619181479212,"results":"59","hashOfConfig":"33"},{"size":1649,"mtime":1619486152395,"results":"60","hashOfConfig":"33"},{"size":115,"mtime":1619017906454,"results":"61","hashOfConfig":"33"},{"size":3779,"mtime":1619485845141,"results":"62","hashOfConfig":"33"},{"size":1927,"mtime":1619708545520,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1m3xjqq",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/anderson/blog/client/src/index.js",[],["135","136"],"/home/anderson/blog/client/src/App.js",[],"/home/anderson/blog/client/src/reportWebVitals.js",[],"/home/anderson/blog/client/src/components/Home.js",["137"],"/home/anderson/blog/client/src/components/auth/Registro.js",[],"/home/anderson/blog/client/src/components/auth/Login.js",[],"/home/anderson/blog/client/src/components/Navbar.js",[],"/home/anderson/blog/client/src/components/auth/BgImage.js",[],"/home/anderson/blog/client/src/store/index.js",[],"/home/anderson/blog/client/src/store/reducers/AuthReducer.js",[],"/home/anderson/blog/client/src/store/asyncMethods/AuthMethods.js",[],"/home/anderson/blog/client/src/components/Dashboard.js",["138","139"],"/home/anderson/blog/client/src/store/tipos/userTypes.js",[],"/home/anderson/blog/client/src/privado/PrivateRoute.js",[],"/home/anderson/blog/client/src/privado/RouteLinks.js",[],"/home/anderson/blog/client/src/components/NotFound.js",[],"/home/anderson/blog/client/src/components/Create.js",["140","141"],"import {Helmet} from 'react-helmet';\nimport {useState, useEffect} from 'react';\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\nimport {createAction} from '../store/asyncMethods/PostMethods';\nimport {useDispatch, useSelector} from 'react-redux'\nimport toast, {Toaster} from 'react-hot-toast';\n\n\nconst Create = (props) =>{\n    const { createErrors, redirect } = useSelector((state) => state.PostReducer)\n    const [currentImage, setCurentImage] = useState('Escolher Imagem')\n    const [imagePreview, setImagePreview]=useState('');\n    const dispatch = useDispatch();\n    const {user:{_id, nome}} = useSelector((state) => state.AuthReducer)\n    const fileHandle = e => {\n        if(e.target.files.length!==0){\n        setCurentImage(e.target.files[0].name)\n        setState({\n            ...state,\n            [e.target.name]: e.target.files[0]\n        })\n        const reader = new FileReader();\n        reader.onloadend =() => {\n            setImagePreview(reader.result);\n        }\n        reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    const [state, setState] = useState({\n        title: '',\n        description: '',\n        image: ''\n    });\n    const handleDescription = (e) =>{\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n\n    }\n    const [slug, setSlug] = useState('');\n    const [slugButton, setSlugButton] = useState(false)\n    const slugHandle = (e)  => {\n        setSlugButton(true);\n        setSlug(e.target.value)\n    \n    }\n    const handleURL = e => {\n        setSlug(slug.trim().slipt(' ').join('-'));\n        e.preventDefault();\n    }\n    const handleInput = e => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n    })\n    const createSlug = e.target.value.trim().split(' ').join('-');\n    setSlug(createSlug);\n}\n    const [value, setValue] = useState('');\n   const createPost = (e) =>{\n       e.preventDefault();\n       const {title, description, image} = state;\n       const formData = new FormData();\n       formData.append('title', title);\n       formData.append('body', value);\n       formData.append('image', image)\n       formData.append('description', description)\n       formData.append('slug', slug)\n       formData.append('name', nome)\n       formData.append('id', _id)\n       dispatch(createAction(formData))\n       \n   };\n   useEffect(() => {\n    if(redirect){\n        props.history.push('./dashboard');\n    }   \n    if (createErrors.length !== 0) {\n        createErrors.map((err) => toast.error(err.msg));\n    }\n}, [createErrors, redirect]);\n    \n    return (\n        <div className='create mt-100'>\n            <Helmet>\n                <title>Criando novo post</title>\n                <meta name=\"descrição\" content=\"Criação de post\" />\n            </Helmet>\n            <Toaster \n                position='top-right' \n                reverseOrder={false}\n                toastOptions={{\n                style: {\n                fontSize: '14px',\n                },\n                }}\n            />\n                <div className='container'>\n                <form onSubmit={createPost}>\n                    <div className='row ml-minus-15 mr-minus-15'>\n                        <div className='col-6 p-15'>\n                            <div className='card'>\n                                <h3 className='card_h3'>Criando novo Post</h3>\n                                \n                                    <div className='group'>\n                                        <label htmlFor='title'>Titulo do Post</label>\n                                        <input type='text'\n                                            name='title' \n                                            id='title'\n                                            value={state.name}\n                                            onChange={handleInput}\n                                            className='group_control' \n                                            placeholder='Titulo do post...' />\n                                    </div>\n                                    <div className='group'>\n                                        <label htmlFor='image'\n                                            className='image_label'\n                                            >{currentImage}\n                                        </label>\n                                        <input \n                                            type='file' \n                                            name='image'\n                                            id='image' \n                                            onChange={fileHandle}  />\n                                    </div>\n                                    <div className='group'>\n                                        <label htmlFor='body'>Corpo do Texto</label>\n                                        <ReactQuill \n                                            theme='snow' \n                                            id='body'\n                                            placeholder='Corpo do Texto'\n                                            value={value} \n                                            onChange={setValue} />\n                                    </div>\n                                    <div className='group'>\n                                        <label htmlFor='description'>Meta Descrição</label>\n                                        <textarea \n                                            name='description' \n                                            id='description' \n                                            cols='30' \n                                            rows='10' \n                                            defaultValue={state.description}\n                                            onChange={handleDescription}\n                                            className='group_control'\n                                            placeholder='Meta descirção...'\n                                            maxLength='150'>\n                                        </textarea>\n                                    <p className='length'>  {state.description ? state.description.length : 0}</p> \n                                    </div>\n                                </div>\n                        </div>\n                        <div className='col-6 p-15'>\n                            <div className='card'>\n                                <div className='group'>\n                                    <label htmlFor='slug'>Post URL</label>\n                                    <input \n                                        type='text' \n                                        name='slug' \n                                        id='slug' \n                                        value={slug}\n                                        onChange={slugHandle}\n                                        className='group_control' \n                                        placeholder='Post URL...' \n                                    />\n                                </div>\n                                <div className='group' >\n                                    {slugButton ? (\n                                    <button class='btn btn-default' onClick={handleURL}>Update Slug</button> \n                                    ) : ( \n                                        ''\n                                    )}\n                                </div>\n                                <div className='group'>\n                                    <div className='imagePreview'>\n                                        {imagePreview ? <img src={imagePreview} /> : ''}\n                                    </div>\n                                </div>\n                                <div className='group'>\n                                        <input \n                                            type='submit' \n                                            value='Criando Post'\n                                            className='btn btn-default btn-block' />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default Create;","/home/anderson/blog/client/src/store/asyncMethods/PostMethods.js",["142","143","144"],"/home/anderson/blog/client/src/store/tipos/PostTypes.js",[],"/home/anderson/blog/client/src/store/reducers/PostReducer.js",["145"],"import {SET_LOADER, CLOSE_LOADER, CREATE_ERRORS, REDIRECT_TRUE, REDIRECT_FALSE, SET_MESSAGE, REMOVE_MESSAGE, REMOVE_ERRORS, SET_POSTS, SET_POST, POST_REQUEST, POST_RESET, RESET_UPDATE, SET_UPDATE_ERRORS, RESET_UPDATE_ERRORS, UPDATE_IMAGE_ERROR, RESET_UPDATE_IMAGE_ERRORS, SET_DETAILS} from '../tipos/PostTypes';\nconst initState = {\n    loading: false,\n    createErrors: [],\n    redirect: false,\n    message: '',\n    posts: [],\n    perPage: 0,\n    count: 0,\n    post:{},\n    postStatus: false,\n    editErrors: [],\n    updateImageErrors: [],\n    details: {}\n}\n\nexport const PostReducer = (state = initState, action) => {\n    const {type, payload} = action;\n    if(type === SET_LOADER){\n        return {...state, loading: true}\n    }else if(type === CLOSE_LOADER){\n        return {...state, loading: false}\n    }else if(type === CREATE_ERRORS){\n        return {...state, createErrors: payload }\n    }else if(type ===REDIRECT_TRUE) {\n        return {...state, redirect: true}\n    }else if(type === REDIRECT_FALSE){\n        return{...state, redirect: false}    \n    }else if(type === SET_MESSAGE){\n        return{ ...state, message: action.payload}\n    }else if(type === REMOVE_MESSAGE){\n        return{...state , message: ''}\n    }else if(type === REMOVE_ERRORS){\n        return{ ...state, createErrors: [] };\n    }else if (type === SET_DETAILS){\n        return({...state, details: payload})\n    }else{\n    return state;\n}\n};\n\nexport const FetchPosts = (state = initState, action) => {\n    const {type, payload} = action;\n    if(type === SET_POSTS){\n        return{...state, posts: payload.response, count: payload.count, perPage: payload.perPage};\n    }else{\n        return state\n    }\n}\nexport const FetchPost = (state = initState, action) => {\n    const {type, payload} = action;\n    if(type === SET_POST){\n        return {...state, post: payload };\n    }else if(type === POST_REQUEST) {\n        return {...state, postStatus: true }\n    }else if(type === POST_RESET){\n        return{...state, postStatus: false}\n    }else{\n        return state;\n    }\n};\nexport const UpdatePost = (state = initState, action) => {\n    const {type, payload} = action;\n    if(type === SET_UPDATE_ERRORS){\n        return{...state, editErrors: payload}\n    }else if(type === RESET_UPDATE_ERRORS){\n        return{...state, editErrors: []}\n    }else{\n        return state;\n    }\n}\nexport const updateImage = (state = initState, action) => {\n    const {payload, type} = action\n    if(type === UPDATE_IMAGE_ERROR){\n        return {...state, updateImageErrors: payload,}\n    }else if(type === RESET_UPDATE_IMAGE_ERRORS){\n        return{...state, updateImageErrors: []}\n    }else{\n        return state\n    }\n}","/home/anderson/blog/client/src/components/SideBar.js",[],"/home/anderson/blog/client/src/components/Pagination.js",["146"],"import { Link } from 'react-router-dom';\nimport { BsChevronRight, BsChevronLeft } from 'react-icons/bs';\nconst Pagination = ({ path, count, page, perPage }) => {\n\tlet totalPages = Math.ceil(count / perPage);\n\tlet startLoop = page;\n\tlet diff = totalPages - page;\n\tif (diff <= 3) {\n\t\tstartLoop = totalPages - 3;\n\t}\n\tlet endLoop = startLoop + 3;\n\tif (startLoop <= 0) {\n\t\tstartLoop = 1;\n\t}\n\tconst links = () => {\n\t\tconst store = [];\n\t\tfor (let i = startLoop; i <= endLoop; i++) {\n\t\t\tstore.push(\n\t\t\t\t<li key={i} className={i == page ? 'active' : ''}>\n\t\t\t\t\t<Link to={`/${path}/${i}`}>{i}</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn store;\n\t};\n\tconst next = () => {\n\t\tif (page < totalPages) {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`/${path}/${parseInt(page) + 1}`}>\n\t\t\t\t\t\t<BsChevronRight />\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t};\n\tconst prev = () => {\n\t\tif (page > 1) {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`/${path}/${parseInt(page - 1)}`}>\n\t\t\t\t\t\t<BsChevronLeft />\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn totalPages && count > 3 ? (\n\t\t<div className='pagination'>\n\t\t\t{prev()}\n\t\t\t{links()}\n\t\t\t{next()}\n\t\t</div>\n\t) : (\n\t\t''\n\t);\n};\nexport default Pagination;\n","/home/anderson/blog/client/src/components/Edit.js",["147","148","149","150","151"],"import { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPost, updateAction } from '../store/asyncMethods/PostMethods';\nimport { POST_RESET, RESET_UPDATE, RESET_UPDATE_ERRORS } from '../store/tipos/PostTypes';\nimport toast, {Toaster} from 'react-hot-toast';\nimport Loader from './Loader'\n\nconst Edit = () => {\n    const {push} = useHistory();\n    const { Quill} = ReactQuill;\n    const { id } = useParams();\n\tconst [value, setValue] = useState('');\n\tconst [state, setState] = useState({\n\t\ttitle: '',\n\t\tdescription: '',\n\t});\n\tconst dispatch = useDispatch();\n\tconst { loading, redirect } = useSelector((state) => state.PostReducer);\n\tconst { post, postStatus } = useSelector((state) => state.FetchPost);\n    const {editErrors} = useSelector(state => state.UpdatePost);\n\tuseEffect(() => {\n\t\tif (postStatus) {\n\t\t\tsetState({\n\t\t\t\ttitle: post.title,\n\t\t\t\tdescription: post.description,\n\t\t\t});\n\t\t\tsetValue(post.body);\n\t\t\tdispatch({ type: POST_RESET });\n\t\t} else {\n\t\t\tdispatch(fetchPost(id));\n\t\t}\n\t}, [post]);\n    const updatePost = e => {\n        e.preventDefault()\n         dispatch(updateAction({\n            title: state.title,\n            body: value,\n            description: state.description,\n            id: post._id,\n        })) \n        \n    }\n    useEffect(() =>{\n        if(editErrors.length !== 0){\n            editErrors.map((error) => toast.error(error.msg))\n            dispatch({type:RESET_UPDATE_ERRORS})\n        } \n    }, [editErrors]);\n    useEffect(() =>{\n        if(redirect){\n            push('/dashboard')\n        }\n    }, [redirect])\n    return !loading ?  (\n        <div className='mt-100'>\n            <Helmet>\n                <title>Edit Post</title>\n                <meta name=\"descrição\" content=\"Edição do post\" />\n            </Helmet>\n            <Toaster \n                position='top-right' \n                reverseOrder={false}\n                toastOptions={{\n                style: {\n                fontSize: '14px',\n                },\n                }}\n            />\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-6'>\n                        <div className='card'>\n                            <h3 className='card_h3'>Editar Post</h3>\n                            <form onSubmit={updatePost}>\n                                <div className='group'>\n                                    <label htmlFor='title'>Titulo do Post</label>\n                                    <input \n                                        type='text' \n                                        name='title' \n                                        id='title' \n                                        className='group_control' \n                                        placeholder='Titulo do Post' \n                                        value={state.title}\n                                        onChange={(e) => setState({...state, title: e.target.value})}\n                                    />\n                                </div>\n                                <div className='group'>\n                                    <label htmlFor='body'>Corpo da postagem</label>\n                                        <ReactQuill \n                                            theme='snow' \n                                            id='body'\n                                            placeholder='Corpo do Texto'\n                                            value={value} \n                                            onChange={setValue} \n                                        />\n                                </div>\n                                <div className='group'>\n                                    <label htmlFor='description'>Meta Descrição</label>\n                                        <textarea \n                                            name='description' \n                                            id='description' \n                                            cols='30' \n                                            rows='10' \n                                            defaultValue={state.description}\n                                            onChange={(e) => \n                                                setState({...state, description: e.target.value})}\n                                            onKeyUp={(e) => \n                                            setState({...state, description: e.target.value})}\n                                            className='group_control'\n                                            placeholder='Meta descirção...'\n                                            maxLength='150'>\n                                        </textarea>\n                                            <p className='length'>  \n                                            {state.description ? state.description.length : 0}</p> \n                                </div>\n                                <div className='group'>\n                                    <input type='submit' value='Editar' className='btn btn-default btn-block'/>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) : ( <Loader />\n        );\n}\nexport default Edit;","/home/anderson/blog/client/src/components/Loader.js",[],"/home/anderson/blog/client/src/components/EditImge.js",["152","153","154"],"import Helmet from 'react-helmet';\nimport {useState, useEffect} from 'react'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {updateImageAction} from '../store/asyncMethods/PostMethods'\nimport toast, {Toaster} from 'react-hot-toast';\nimport {RESET_UPDATE_IMAGE_ERRORS} from '../store/tipos/PostTypes'\n\n\nconst EditImage = () => {\n    const{id} = useParams();\n    const {push} = useHistory()\n    const dispatch = useDispatch()\n    const {updateImageErrors} = useSelector((state) => state.updateImage)\n    const {redirect} = useSelector((state) => state.PostReducer)\n    const [state, setState] = useState({\n        image: '',\n        imagePreview:'',\n        imageName: 'Escolha a imagem',\n    })\n    const fileHandle = (e) => {\n        if(e.target.files.length !== 0) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setState({...state, imagePreview: reader.result, image: e.target.files[0], imageName: e.target.files[0].name})\n            }\n            reader.readAsDataURL(e.target.files[0])\n        }\n    }\n        const updateImage = (e) => {\n            e.preventDefault();\n            const formData = new FormData()\n            formData.append('id', id)\n            formData.append('image', state.image)\n            dispatch(updateImageAction(formData))\n        }\n        useEffect(() => {\n            if(updateImageErrors.length !==0){\n                updateImageErrors.map((error) => toast.error(error.msg))\n                dispatch({type: RESET_UPDATE_IMAGE_ERRORS})\n            }\n        },[updateImageErrors])\n        useEffect(() => {\n            if(redirect){\n                push('/dashboard')\n            }\n        }, [redirect])\n        return(\n            <div className='container mt-100' >\n                <Helmet>\n                    <title>Editar imagem</title>\n                    <meta name=\"description\" content=\"Edição de imagem\" />\n                </Helmet>\n                <Toaster \n                    position='top-right' \n                    reverseOrder={false}\n                    toastOptions={{\n                    style: {\n                    fontSize: '14px',\n                    },\n                    }}\n                />  \n                <div className='row'>\n                    <div className='col-6'>\n                        <div className='card'>\n                            <h3 className='card__h3'>Editar imagem</h3>\n                            <form onSubmit={updateImage}>\n                                <div className='group'>\n                                    <label htmlFor='image' className='image_label'>\n                                        {state.imageName}\n                                    </label>\n                                    <input \n                                        type='file' \n                                        name='image'\n                                        id='image' \n                                        onChange={fileHandle}  />\n                                </div>\n                                <div className='group'>\n                                    <div className='imagePreview'>\n                                        {state.imagePreview ? <img src={state.imagePreview}/> : ''}\n                                    </div>\n                                    <div className='group'>\n                                    <input \n                                        type='submit' \n                                        value='Alterar Imagem'\n                                        className='btn btn-default btn-block' />\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    \n    }\nexport default EditImage;","/home/anderson/blog/client/src/components/UpdateName.js",["155","156","157","158"],"import {Helmet} from 'react-helmet';\nimport {useState, useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {updateNameAction} from '../store/asyncMethods/ProfileMethods'\nimport toast, {Toaster} from 'react-hot-toast';\nimport { useHistory } from 'react-router-dom';\nimport {RESET_PROFILE_ERRORS} from '../store/tipos/ProfileTipos'\nimport SideBar from './SideBar'\n\n\nconst UpdateName = () => {\n    const { push } = useHistory()\n    const [userName, setUserName] = useState('')\n    const {\n        user: {nome, _id},\n    } = useSelector((user) => user.AuthReducer)\n    const {loading, redirect} = useSelector((state) => state.PostReducer)\n    const {updateErrors} = useSelector((state) => state.updateName)\n    const dispatch = useDispatch()\n    const updateNameMethod = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(updateNameAction({ name: userName, id: _id }));\n    };\n    useEffect(() => {\n        setUserName(nome)\n    }, [])\n    useEffect(() => {\n        if(updateErrors.length !==0){\n            updateErrors.map((error) => toast.error(error.msg))\n            dispatch({type: RESET_PROFILE_ERRORS})\n        }\n    }, [updateErrors]);\n    useEffect(() => {\n\t\tif(redirect) {\n\t\t\tpush('/dashboard');\n\t\t}\n\t},[redirect]);\n    return (\n        <div className='container mt-100'>\n            <Helmet>\n                <title>Alterando nome</title>\n                <meta name=\"description\" content=\"Alterando o nome\" />\n            </Helmet>\n            <Toaster \n                position='top-right' \n                reverseOrder={false}\n                toastOptions={{\n                style: {\n                fontSize: '14px',\n                },\n                }}\n            />\n            <div className='row ml-minus-15 mr-minus-15'>\n                <div className='col-3 p-15'>\n                    <SideBar />\n                </div>\n                <div className='col-9 p-15'>\n                    <div className='card'>\n                        <h3 className='card__h3'>Mudar Nome</h3>\n\t\t\t\t\t\t<form onSubmit={updateNameMethod}>\n                            <div className='group'>\n                                <input \n                                    type='text'\n                                    name='' \n                                    className='group_control' \n                                    placeholder='Nome...' \n                                    onChange={(e) => setUserName(e.target.value)} \n                                    value={userName}\n                                />\n                            </div>\n                            <div className='group'>\n                                <input \n                                    type='submit' \n                                    value='Mudar Nome'\n                                    className='btn btn-default btn-block' \n                                />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default UpdateName","/home/anderson/blog/client/src/store/reducers/ProfileReducer.js",[],"/home/anderson/blog/client/src/store/asyncMethods/ProfileMethods.js",["159"],"import axios from 'axios'\nimport {SET_LOADER, CLOSE_LOADER, REDIRECT_TRUE, SET_MESSAGE} from '../tipos/PostTypes'\nimport {RESET_PROFILE_ERRORS, SET_PROFILE_ERRORS } from '../tipos/ProfileTipos'\nimport {SET_TOKEN} from '../tipos/userTypes'\n\nexport const updateNameAction = (user) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/updateName', user, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\n\t\t\tlocalStorage.setItem('myToken', data.token)\n\t\t\tdispatch({ type: SET_TOKEN, payload: data.token })\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg })\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t} catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            console.log(error.response.data.errors);\n            dispatch({ type: SET_PROFILE_ERRORS, payload: error.response.data.errors})\n                \n        }\n    }\n}\nexport const updatePasswordAction = (userData) => {\n\treturn async(dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({type: SET_LOADER})\n\t\ttry {\n\t\t\tconst {data} = await axios.post('/updatePassword', userData, config)\n\t\t\tdispatch({ type: CLOSE_LOADER})\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg })\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER})\n\t\t\tdispatch({ type: SET_PROFILE_ERRORS, payload: error.response.data.errors})\n\n\t\t}\n\t}\n}","/home/anderson/blog/client/src/store/tipos/ProfileTipos.js",[],"/home/anderson/blog/client/src/components/ChangePassword.js",["160","161"],"import {useState, useEffect} from 'react'\nimport SideBar from \"./SideBar\"\nimport {Helmet} from 'react-helmet';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\nimport {updatePasswordAction} from '../store/asyncMethods/ProfileMethods'\nimport Loader from './Loader'\nimport {RESET_PROFILE_ERRORS} from '../store/tipos/ProfileTipos'\nimport toast, {Toaster} from 'react-hot-toast';\n\n\n\nconst ChangePassword = () => {\n    const {push} = useHistory()\n    const [state, setState] = useState({\n        atual: '',\n        novaSenha: '',\n        userId: null\n    })\n    const dispatch = useDispatch()\n    const {loading, redirect} = useSelector((state) => state.PostReducer)\n    const {updateErrors} = useSelector((state) => state.updateName)\n    const {\n        user: {_id},\n    } = useSelector((state) => state.AuthReducer)\n\n    const updatePassword = (e) => {\n        e.preventDefault()\n        dispatch(updatePasswordAction({atual: state.atual, novaSenha: state.novaSenha, userId: _id}))\n    }\n    useEffect(() => {\n        if(updateErrors.length !==0){\n            updateErrors.map((error) => toast.error(error.msg))\n            dispatch({type: RESET_PROFILE_ERRORS})\n    }\n}, [updateErrors])\nuseEffect(() => {\n    if(redirect) {\n        push('/dashboard');\n    }\n},[redirect]);\n    return !loading ? (\n        <div className='container mt-100'>\n            <Helmet>\n                <title>Alterando a senha</title>\n                <meta name=\"description\" content=\"Alterando a senha\" />\n            </Helmet>\n            <Toaster \n                position='top-right' \n                reverseOrder={false}\n                toastOptions={{\n                style: {\n                fontSize: '14px',\n                },\n                }}\n            />\n            <div className='row ml-minus-15 mr-minus-15'>\n                <div className='col-3 p-15'>\n                    <SideBar />\n\n                </div>\n                <div className='col-9 p-15'>\n                    <div className='card'>\n                        <h3 className='card__h3'>Mudar a senha</h3>\n                        <form onSubmit={updatePassword}>\n                            <div className='group'>\n                                <input \n                                    type='password' \n                                    name='' \n                                    className='group_control' \n                                    placeholder='Senha atual'\n                                    onChange={(e) => setState({...state, atual: e.target.value})}\n                                    value={state.atual}\n                                />\n                            </div>\n                            <div className='group'>\n                                <input \n                                    type='password' \n                                    name='' \n                                    className='group_control' \n                                    placeholder='Nova Senha'\n                                    onChange={(e) => setState({...state, novaSenha: e.target.value})}\n                                    value={state.novaSenha}\n                                />\n                            </div>\n                            <div className='group'>\n                                <input \n                                    type=\"submit\" \n                                    value='Mudar a senha' \n                                    className='btn btn-default btn-block' \n                                />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) : ( \n        <Loader />\n    )\n}\nexport default ChangePassword","/home/anderson/blog/client/src/components/Details.js",["162"],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":25,"column":8,"nodeType":"169","endLine":25,"endColumn":14,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"171","line":57,"column":7,"nodeType":"169","endLine":57,"endColumn":16,"suggestions":"172"},{"ruleId":"167","severity":1,"message":"173","line":60,"column":8,"nodeType":"169","endLine":60,"endColumn":14,"suggestions":"174"},{"ruleId":"167","severity":1,"message":"175","line":84,"column":4,"nodeType":"169","endLine":84,"endColumn":28,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":178,"column":57,"nodeType":"179","endLine":178,"endColumn":83},{"ruleId":"180","severity":1,"message":"181","line":2,"column":81,"nodeType":"182","messageId":"183","endLine":2,"endColumn":95},{"ruleId":"180","severity":1,"message":"184","line":2,"column":110,"nodeType":"182","messageId":"183","endLine":2,"endColumn":125},{"ruleId":"180","severity":1,"message":"185","line":2,"column":162,"nodeType":"182","messageId":"183","endLine":2,"endColumn":173},{"ruleId":"180","severity":1,"message":"186","line":1,"column":172,"nodeType":"182","messageId":"183","endLine":1,"endColumn":184},{"ruleId":"187","severity":1,"message":"188","line":18,"column":30,"nodeType":"189","messageId":"190","endLine":18,"endColumn":32},{"ruleId":"180","severity":1,"message":"186","line":8,"column":22,"nodeType":"182","messageId":"183","endLine":8,"endColumn":34},{"ruleId":"180","severity":1,"message":"191","line":14,"column":13,"nodeType":"182","messageId":"183","endLine":14,"endColumn":18},{"ruleId":"167","severity":1,"message":"192","line":36,"column":5,"nodeType":"169","endLine":36,"endColumn":11,"suggestions":"193"},{"ruleId":"167","severity":1,"message":"168","line":52,"column":8,"nodeType":"169","endLine":52,"endColumn":20,"suggestions":"194"},{"ruleId":"167","severity":1,"message":"195","line":57,"column":8,"nodeType":"169","endLine":57,"endColumn":18,"suggestions":"196"},{"ruleId":"167","severity":1,"message":"168","line":42,"column":11,"nodeType":"169","endLine":42,"endColumn":30,"suggestions":"197"},{"ruleId":"167","severity":1,"message":"195","line":47,"column":12,"nodeType":"169","endLine":47,"endColumn":22,"suggestions":"198"},{"ruleId":"177","severity":1,"message":"178","line":80,"column":63,"nodeType":"179","endLine":80,"endColumn":94},{"ruleId":"180","severity":1,"message":"199","line":17,"column":12,"nodeType":"182","messageId":"183","endLine":17,"endColumn":19},{"ruleId":"167","severity":1,"message":"200","line":26,"column":8,"nodeType":"169","endLine":26,"endColumn":10,"suggestions":"201"},{"ruleId":"167","severity":1,"message":"168","line":32,"column":8,"nodeType":"169","endLine":32,"endColumn":22,"suggestions":"202"},{"ruleId":"167","severity":1,"message":"195","line":37,"column":4,"nodeType":"169","endLine":37,"endColumn":14,"suggestions":"203"},{"ruleId":"180","severity":1,"message":"204","line":3,"column":9,"nodeType":"182","messageId":"183","endLine":3,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":36,"column":4,"nodeType":"169","endLine":36,"endColumn":18,"suggestions":"205"},{"ruleId":"167","severity":1,"message":"195","line":41,"column":3,"nodeType":"169","endLine":41,"endColumn":13,"suggestions":"206"},{"ruleId":"167","severity":1,"message":"168","line":18,"column":8,"nodeType":"169","endLine":18,"endColumn":12,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["210"],"React Hook useEffect has missing dependencies: 'dispatch' and 'redirect'. Either include them or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: '_id' and 'dispatch'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["213"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'REDIRECT_FALSE' is defined but never used.","Identifier","unusedVar","'REMOVE_MENSSAGE' is defined but never used.","'EDIT_ERRORS' is defined but never used.","'RESET_UPDATE' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Quill' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'postStatus'. Either include them or remove the dependency array.",["214"],["215"],"React Hook useEffect has a missing dependency: 'push'. Either include it or remove the dependency array.",["216"],["217"],["218"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'nome'. Either include it or remove the dependency array.",["219"],["220"],["221"],"'RESET_PROFILE_ERRORS' is defined but never used.",["222"],["223"],["224"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"237","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"237","fix":"246"},{"desc":"244","fix":"247"},{"desc":"237","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [dispatch, page]",{"range":"251","text":"252"},"Update the dependencies array to be: [dispatch, message, redirect]",{"range":"253","text":"254"},"Update the dependencies array to be: [_id, dispatch, page]",{"range":"255","text":"256"},"Update the dependencies array to be: [createErrors, props.history, redirect]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, id, post, postStatus]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch, editErrors]",{"range":"261","text":"262"},"Update the dependencies array to be: [push, redirect]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, updateImageErrors]",{"range":"265","text":"266"},{"range":"267","text":"264"},"Update the dependencies array to be: [nome]",{"range":"268","text":"269"},"Update the dependencies array to be: [dispatch, updateErrors]",{"range":"270","text":"271"},{"range":"272","text":"264"},{"range":"273","text":"271"},{"range":"274","text":"264"},"Update the dependencies array to be: [dispatch, id]",{"range":"275","text":"276"},[745,751],"[dispatch, page]",[2006,2015],"[dispatch, message, redirect]",[2086,2092],"[_id, dispatch, page]",[2584,2608],"[createErrors, props.history, redirect]",[1222,1228],"[dispatch, id, post, postStatus]",[1663,1675],"[dispatch, editErrors]",[1769,1779],"[push, redirect]",[1620,1639],"[dispatch, updateImageErrors]",[1753,1763],[951,953],"[nome]",[1147,1161],"[dispatch, updateErrors]",[1233,1243],[1218,1232],[1307,1317],[550,554],"[dispatch, id]"]