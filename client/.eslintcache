[{"/home/anderson/blog/client/src/index.js":"1","/home/anderson/blog/client/src/App.js":"2","/home/anderson/blog/client/src/reportWebVitals.js":"3","/home/anderson/blog/client/src/components/Home.js":"4","/home/anderson/blog/client/src/components/auth/Registro.js":"5","/home/anderson/blog/client/src/components/auth/Login.js":"6","/home/anderson/blog/client/src/components/Navbar.js":"7","/home/anderson/blog/client/src/components/auth/BgImage.js":"8","/home/anderson/blog/client/src/store/index.js":"9","/home/anderson/blog/client/src/store/reducers/AuthReducer.js":"10","/home/anderson/blog/client/src/store/asyncMethods/AuthMethods.js":"11","/home/anderson/blog/client/src/components/Dashboard.js":"12","/home/anderson/blog/client/src/store/tipos/userTypes.js":"13","/home/anderson/blog/client/src/privado/PrivateRoute.js":"14","/home/anderson/blog/client/src/privado/RouteLinks.js":"15","/home/anderson/blog/client/src/components/NotFound.js":"16","/home/anderson/blog/client/src/components/Create.js":"17","/home/anderson/blog/client/src/store/asyncMethods/PostMethods.js":"18","/home/anderson/blog/client/src/store/tipos/PostTypes.js":"19","/home/anderson/blog/client/src/store/reducers/PostReducer.js":"20","/home/anderson/blog/client/src/components/auth/Loader.js":"21","/home/anderson/blog/client/src/components/SideBar.js":"22","/home/anderson/blog/client/src/components/Pagination.js":"23","/home/anderson/blog/client/src/components/Edit.js":"24"},{"size":268,"mtime":1612189570210,"results":"25","hashOfConfig":"26"},{"size":1184,"mtime":1618506669272,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1612187771852,"results":"28","hashOfConfig":"26"},{"size":285,"mtime":1612479975633,"results":"29","hashOfConfig":"26"},{"size":3090,"mtime":1612880356501,"results":"30","hashOfConfig":"26"},{"size":2806,"mtime":1612915702229,"results":"31","hashOfConfig":"26"},{"size":1531,"mtime":1618405217176,"results":"32","hashOfConfig":"26"},{"size":105,"mtime":1612402314038,"results":"33","hashOfConfig":"26"},{"size":587,"mtime":1618575994428,"results":"34","hashOfConfig":"26"},{"size":1478,"mtime":1618510170456,"results":"35","hashOfConfig":"26"},{"size":1488,"mtime":1618422820336,"results":"36","hashOfConfig":"26"},{"size":2919,"mtime":1618522319095,"results":"37","hashOfConfig":"26"},{"size":248,"mtime":1612914040333,"results":"38","hashOfConfig":"26"},{"size":370,"mtime":1612880169104,"results":"39","hashOfConfig":"26"},{"size":379,"mtime":1612880285461,"results":"40","hashOfConfig":"26"},{"size":536,"mtime":1612882248016,"results":"41","hashOfConfig":"26"},{"size":8324,"mtime":1618425148088,"results":"42","hashOfConfig":"26"},{"size":2677,"mtime":1618577995964,"results":"43","hashOfConfig":"26"},{"size":719,"mtime":1618575361668,"results":"44","hashOfConfig":"26"},{"size":2170,"mtime":1618576729856,"results":"45","hashOfConfig":"26"},{"size":197,"mtime":1614036701900,"results":"46","hashOfConfig":"26"},{"size":488,"mtime":1614035613438,"results":"47","hashOfConfig":"26"},{"size":1130,"mtime":1618493433024,"results":"48","hashOfConfig":"26"},{"size":5424,"mtime":1618578952019,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1m3xjqq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/anderson/blog/client/src/index.js",[],["102","103"],"/home/anderson/blog/client/src/App.js",[],"/home/anderson/blog/client/src/reportWebVitals.js",[],"/home/anderson/blog/client/src/components/Home.js",[],"/home/anderson/blog/client/src/components/auth/Registro.js",[],"/home/anderson/blog/client/src/components/auth/Login.js",[],"/home/anderson/blog/client/src/components/Navbar.js",[],"/home/anderson/blog/client/src/components/auth/BgImage.js",[],"/home/anderson/blog/client/src/store/index.js",[],"/home/anderson/blog/client/src/store/reducers/AuthReducer.js",[],"/home/anderson/blog/client/src/store/asyncMethods/AuthMethods.js",[],"/home/anderson/blog/client/src/components/Dashboard.js",["104"],"import { useEffect} from 'react';\nimport {Helmet} from 'react-helmet';\nimport { useSelector, useDispatch} from 'react-redux';\nimport {REDIRECT_FALSE, REMOVE_MESSAGE} from '../store/tipos/PostTypes';\nimport toast, {Toaster} from 'react-hot-toast';\nimport {fetchPosts} from '../store/asyncMethods/PostMethods';\nimport {Link, useParams} from 'react-router-dom';\nimport {BsPencil, BsArchive} from 'react-icons/bs';\nimport Loader from './auth/Loader';\nimport SideBar from './SideBar';\nimport Pagination from './/Pagination';\n\nconst Dashboard = () => {\n    const {redirect, menssage, loading} = useSelector((state) => state.PostReducer)\n    const { user: {_id},} = useSelector((state) => state.AuthReducer);\n    const {posts, count, perPage} = useSelector(state => state.FetchPosts)\n    let {page} = useParams();\n    if(page === undefined){\n        page = 1;\n    }\n    const dispatch = useDispatch()\n    useEffect(() => {\n        if(redirect){\n            dispatch({type: REDIRECT_FALSE});\n        }\n        if(menssage){\n            toast.success(menssage);\n            dispatch({type: REMOVE_MESSAGE});\n        }\n        dispatch(fetchPosts(_id, page));\n    },[page])\n    return (\n    <>\n        <Helmet>\n            <title>Dashboard</title>\n            <meta name=\"descrição\" content=\"Dashboard do usuario\" />\n        </Helmet>\n        <Toaster \n            position='top-center' \n            reverseOrder={false}\n            toastOptions={{\n            style: {\n            fontSize: '14px',\n            },\n            }}\n        />\n        <div className=\"container mt-100\">\n            <div className=\"row ml-minus-15 mr-minus-15\">\n                <div className='col-3 p-15'>\n                    <SideBar />\n                </div>\n                <div className='col-9 p-15'>\n                    {!loading ?(\n                         posts.length > 0 ?(\n                            posts.map((post) => (\n                                <div className='dashboard_posts'key={post._id}>\n                                    <div className='dashboard_posts_title'>\n                                        <Link to='/'>{post.title}</Link>\n                                </div>\n                                <div className='dashboard_posts_links'>\n                                    <Link to ={`/edit/${post._id}`}><BsPencil className='icon'  /></Link>\n                                    <BsArchive className='icon'/>\n                                </div>\n                            </div>\n                           \n                        ))\n                    ) : (\n                        'Você não tem nenhuma postagem'\n                    )\n                    ) : (\n                         <Loader />\n                    )}\n                    <Pagination page={page} perPage={perPage} count={count}/>\n                </div>\n            </div>\n        </div>\n    </>\n        )};\nexport default Dashboard;","/home/anderson/blog/client/src/store/tipos/userTypes.js",[],"/home/anderson/blog/client/src/privado/PrivateRoute.js",[],"/home/anderson/blog/client/src/privado/RouteLinks.js",[],"/home/anderson/blog/client/src/components/NotFound.js",[],"/home/anderson/blog/client/src/components/Create.js",["105","106"],"import {Helmet} from 'react-helmet';\nimport {useState, useEffect} from 'react';\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\nimport {createAction} from '../store/asyncMethods/PostMethods';\nimport {useDispatch, useSelector} from 'react-redux'\nimport toast, {Toaster} from 'react-hot-toast';\n\n\nconst Create = (props) =>{\n    const { createErrors, redirect } = useSelector((state) => state.PostReducer)\n    const [currentImage, setCurentImage] = useState('Escolher Imagem')\n    const [imagePreview, setImagePreview]=useState('');\n    const dispatch = useDispatch();\n    const {user:{_id, nome}} = useSelector((state) => state.AuthReducer)\n    const fileHandle = e => {\n        if(e.target.files.length!==0){\n        setCurentImage(e.target.files[0].name)\n        setState({\n            ...state,\n            [e.target.name]: e.target.files[0]\n        })\n        const reader = new FileReader();\n        reader.onloadend =() => {\n            setImagePreview(reader.result);\n        }\n        reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    const [state, setState] = useState({\n        title: '',\n        description: '',\n        image: ''\n    });\n    const handleDescription = (e) =>{\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n\n    }\n    const [slug, setSlug] = useState('');\n    const [slugButton, setSlugButton] = useState(false)\n    const slugHandle = (e)  => {\n        setSlugButton(true);\n        setSlug(e.target.value)\n    \n    }\n    const handleURL = e => {\n        setSlug(slug.trim().slipt(' ').join('-'));\n        e.preventDefault();\n    }\n    const handleInput = e => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n    })\n    const createSlug = e.target.value.trim().split(' ').join('-');\n    setSlug(createSlug);\n}\n    const [value, setValue] = useState('');\n   const createPost = (e) =>{\n       e.preventDefault();\n       const {title, description, image} = state;\n       const formData = new FormData();\n       formData.append('title', title);\n       formData.append('body', value);\n       formData.append('image', image)\n       formData.append('description', description)\n       formData.append('slug', slug)\n       formData.append('name', nome)\n       formData.append('id', _id)\n       dispatch(createAction(formData))\n       \n   };\n   useEffect(() => {\n    if(redirect){\n        props.history.push('./dashboard');\n    }   \n    if (createErrors.length !== 0) {\n        createErrors.map((err) => toast.error(err.msg));\n    }\n}, [createErrors, redirect]);\n    \n    return (\n        <div className='create mt-100'>\n            <Helmet>\n                <title>Criando novo post</title>\n                <meta name=\"descrição\" content=\"Criação de post\" />\n            </Helmet>\n            <Toaster \n                position='top-right' \n                reverseOrder={false}\n                toastOptions={{\n                style: {\n                fontSize: '14px',\n                },\n                }}\n            />\n                <div className='container'>\n                <form onSubmit={createPost}>\n                    <div className='row ml-minus-15 mr-minus-15'>\n                        <div className='col-6 p-15'>\n                            <div className='card'>\n                                <h3 className='card_h3'>Criando novo Post</h3>\n                                \n                                    <div className='group'>\n                                        <label htmlFor='title'>Titulo do Post</label>\n                                        <input type='text'\n                                            name='title' \n                                            id='title'\n                                            value={state.name}\n                                            onChange={handleInput}\n                                            className='group_control' \n                                            placeholder='Titulo do post...' />\n                                    </div>\n                                    <div className='group'>\n                                        <label htmlFor='image'\n                                            className='image_label'\n                                            >{currentImage}\n                                        </label>\n                                        <input \n                                            type='file' \n                                            name='image'\n                                            id='image' \n                                            onChange={fileHandle}  />\n                                    </div>\n                                    <div className='group'>\n                                        <label htmlFor='body'>Corpo do Texto</label>\n                                        <ReactQuill \n                                            theme='snow' \n                                            id='body'\n                                            placeholder='Corpo do Texto'\n                                            value={value} \n                                            onChange={setValue} />\n                                    </div>\n                                    <div className='group'>\n                                        <label htmlFor='description'>Meta Descrição</label>\n                                        <textarea \n                                            name='description' \n                                            id='description' \n                                            cols='30' \n                                            rows='10' \n                                            defaultValue={state.description}\n                                            onChange={handleDescription}\n                                            className='group_control'\n                                            placeholder='Meta descirção...'\n                                            maxLength='150'>\n                                        </textarea>\n                                    <p className='length'>  {state.description ? state.description.length : 0}</p> \n                                    </div>\n                                </div>\n                        </div>\n                        <div className='col-6 p-15'>\n                            <div className='card'>\n                                <div className='group'>\n                                    <label htmlFor='slug'>Post URL</label>\n                                    <input \n                                        type='text' \n                                        name='slug' \n                                        id='slug' \n                                        value={slug}\n                                        onChange={slugHandle}\n                                        className='group_control' \n                                        placeholder='Post URL...' \n                                    />\n                                </div>\n                                <div className='group' >\n                                    {slugButton ? (\n                                    <button class='btn btn-default' onClick={handleURL}>Update Slug</button> \n                                    ) : ( \n                                        ''\n                                    )}\n                                </div>\n                                <div className='group'>\n                                    <div className='imagePreview'>\n                                        {imagePreview ? <img src={imagePreview} /> : ''}\n                                    </div>\n                                </div>\n                                <div className='group'>\n                                        <input \n                                            type='submit' \n                                            value='Criando Post'\n                                            className='btn btn-default btn-block' />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default Create;","/home/anderson/blog/client/src/store/asyncMethods/PostMethods.js",["107","108","109"],"/home/anderson/blog/client/src/store/tipos/PostTypes.js",[],"/home/anderson/blog/client/src/store/reducers/PostReducer.js",["110"],"/home/anderson/blog/client/src/components/auth/Loader.js",[],"/home/anderson/blog/client/src/components/SideBar.js",[],"/home/anderson/blog/client/src/components/Pagination.js",["111"],"import { Link } from 'react-router-dom';\nimport { BsChevronRight, BsChevronLeft } from 'react-icons/bs';\nconst Pagination = ({ count, page, perPage }) => {\n\tlet totalPages = Math.ceil(count / perPage);\n\tlet startLoop = page;\n\tlet diff = totalPages - page;\n\tif (diff <= 3) {\n\t\tstartLoop = totalPages - 3;\n\t}\n\tlet endLoop = startLoop + 3;\n\tif (startLoop <= 0) {\n\t\tstartLoop = 1;\n\t}\n\tconst links = () => {\n\t\tconst store = [];\n\t\tfor (let i = startLoop; i <= endLoop; i++) {\n\t\t\tstore.push(\n\t\t\t\t<li key={i} className={i == page ? 'active' : ''}>\n\t\t\t\t\t<Link to={`/dashboard/${i}`}>{i}</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn store;\n\t};\n\tconst next = () => {\n\t\tif (page < totalPages) {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`/dashboard/${parseInt(page) + 1}`}>\n\t\t\t\t\t\t<BsChevronRight />\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t};\n\tconst prev = () => {\n\t\tif (page > 1) {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`/dashboard/${parseInt(page - 1)}`}>\n\t\t\t\t\t\t<BsChevronLeft />\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn totalPages ? (\n\t\t<div className='pagination'>\n\t\t\t{prev()}\n\t\t\t{links()}\n\t\t\t{next()}\n\t\t</div>\n\t) : (\n\t\t''\n\t);\n};\nexport default Pagination;\n","/home/anderson/blog/client/src/components/Edit.js",["112","113","114","115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":31,"column":7,"nodeType":"124","endLine":31,"endColumn":13,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":84,"column":4,"nodeType":"124","endLine":84,"endColumn":28,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":178,"column":57,"nodeType":"130","endLine":178,"endColumn":83},{"ruleId":"131","severity":1,"message":"132","line":2,"column":81,"nodeType":"133","messageId":"134","endLine":2,"endColumn":95},{"ruleId":"131","severity":1,"message":"135","line":2,"column":110,"nodeType":"133","messageId":"134","endLine":2,"endColumn":125},{"ruleId":"131","severity":1,"message":"136","line":2,"column":162,"nodeType":"133","messageId":"134","endLine":2,"endColumn":173},{"ruleId":"131","severity":1,"message":"137","line":1,"column":172,"nodeType":"133","messageId":"134","endLine":1,"endColumn":184},{"ruleId":"138","severity":1,"message":"139","line":18,"column":30,"nodeType":"140","messageId":"141","endLine":18,"endColumn":32},{"ruleId":"131","severity":1,"message":"137","line":8,"column":22,"nodeType":"133","messageId":"134","endLine":8,"endColumn":34},{"ruleId":"131","severity":1,"message":"142","line":8,"column":36,"nodeType":"133","messageId":"134","endLine":8,"endColumn":55},{"ruleId":"131","severity":1,"message":"143","line":13,"column":13,"nodeType":"133","messageId":"134","endLine":13,"endColumn":18},{"ruleId":"131","severity":1,"message":"144","line":21,"column":10,"nodeType":"133","messageId":"134","endLine":21,"endColumn":17},{"ruleId":"122","severity":1,"message":"145","line":35,"column":5,"nodeType":"124","endLine":35,"endColumn":11,"suggestions":"146"},{"ruleId":"122","severity":1,"message":"147","line":55,"column":8,"nodeType":"124","endLine":55,"endColumn":18,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id', 'dispatch', 'menssage', and 'redirect'. Either include them or remove the dependency array.","ArrayExpression",["151"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["152"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'REDIRECT_FALSE' is defined but never used.","Identifier","unusedVar","'REMOVE_MENSSAGE' is defined but never used.","'EDIT_ERRORS' is defined but never used.","'RESET_UPDATE' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'RESET_UPDATE_ERRORS' is defined but never used.","'Quill' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'postStatus'. Either include them or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'push'. Either include it or remove the dependency array.",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [_id, dispatch, menssage, page, redirect]",{"range":"163","text":"164"},"Update the dependencies array to be: [createErrors, props.history, redirect]",{"range":"165","text":"166"},"Update the dependencies array to be: [dispatch, id, post, postStatus]",{"range":"167","text":"168"},"Update the dependencies array to be: [push, redirect]",{"range":"169","text":"170"},[1156,1162],"[_id, dispatch, menssage, page, redirect]",[2584,2608],"[createErrors, props.history, redirect]",[1192,1198],"[dispatch, id, post, postStatus]",[1690,1700],"[push, redirect]"]