[{"/home/anderson/blog/client/src/index.js":"1","/home/anderson/blog/client/src/App.js":"2","/home/anderson/blog/client/src/reportWebVitals.js":"3","/home/anderson/blog/client/src/components/Home.js":"4","/home/anderson/blog/client/src/components/auth/Registro.js":"5","/home/anderson/blog/client/src/components/auth/Login.js":"6","/home/anderson/blog/client/src/components/Navbar.js":"7","/home/anderson/blog/client/src/components/auth/BgImage.js":"8","/home/anderson/blog/client/src/store/index.js":"9","/home/anderson/blog/client/src/store/reducers/AuthReducer.js":"10","/home/anderson/blog/client/src/store/asyncMethods/AuthMethods.js":"11","/home/anderson/blog/client/src/components/Dashboard.js":"12","/home/anderson/blog/client/src/store/tipos/userTypes.js":"13","/home/anderson/blog/client/src/privado/PrivateRoute.js":"14","/home/anderson/blog/client/src/privado/RouteLinks.js":"15","/home/anderson/blog/client/src/components/NotFound.js":"16","/home/anderson/blog/client/src/components/Create.js":"17","/home/anderson/blog/client/src/store/asyncMethods/PostMethods.js":"18","/home/anderson/blog/client/src/store/tipos/PostTypes.js":"19","/home/anderson/blog/client/src/store/reducers/PostReducer.js":"20"},{"size":268,"mtime":1612189570210,"results":"21","hashOfConfig":"22"},{"size":1121,"mtime":1612971727209,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1612187771852,"results":"24","hashOfConfig":"22"},{"size":285,"mtime":1612479975633,"results":"25","hashOfConfig":"22"},{"size":3090,"mtime":1612880356501,"results":"26","hashOfConfig":"22"},{"size":2806,"mtime":1612915702229,"results":"27","hashOfConfig":"22"},{"size":1512,"mtime":1612884447404,"results":"28","hashOfConfig":"22"},{"size":105,"mtime":1612402314038,"results":"29","hashOfConfig":"22"},{"size":536,"mtime":1613775595127,"results":"30","hashOfConfig":"22"},{"size":1600,"mtime":1613668431039,"results":"31","hashOfConfig":"22"},{"size":1487,"mtime":1612914430339,"results":"32","hashOfConfig":"22"},{"size":2554,"mtime":1613778990591,"results":"33","hashOfConfig":"22"},{"size":248,"mtime":1612914040333,"results":"34","hashOfConfig":"22"},{"size":370,"mtime":1612880169104,"results":"35","hashOfConfig":"22"},{"size":379,"mtime":1612880285461,"results":"36","hashOfConfig":"22"},{"size":536,"mtime":1612882248016,"results":"37","hashOfConfig":"22"},{"size":8324,"mtime":1613520161197,"results":"38","hashOfConfig":"22"},{"size":1420,"mtime":1613747255706,"results":"39","hashOfConfig":"22"},{"size":405,"mtime":1613747174684,"results":"40","hashOfConfig":"22"},{"size":1276,"mtime":1613778436288,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1pm0gkq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anderson/blog/client/src/index.js",[],["85","86"],"/home/anderson/blog/client/src/App.js",[],"/home/anderson/blog/client/src/reportWebVitals.js",[],"/home/anderson/blog/client/src/components/Home.js",[],"/home/anderson/blog/client/src/components/auth/Registro.js",[],"/home/anderson/blog/client/src/components/auth/Login.js",[],"/home/anderson/blog/client/src/components/Navbar.js",[],"/home/anderson/blog/client/src/components/auth/BgImage.js",[],"/home/anderson/blog/client/src/store/index.js",[],"/home/anderson/blog/client/src/store/reducers/AuthReducer.js",[],"/home/anderson/blog/client/src/store/asyncMethods/AuthMethods.js",[],"/home/anderson/blog/client/src/components/Dashboard.js",["87"],"/home/anderson/blog/client/src/store/tipos/userTypes.js",[],"/home/anderson/blog/client/src/privado/PrivateRoute.js",[],"/home/anderson/blog/client/src/privado/RouteLinks.js",[],"/home/anderson/blog/client/src/components/NotFound.js",[],"/home/anderson/blog/client/src/components/Create.js",["88","89"],"import {Helmet} from 'react-helmet';\nimport {useState, useEffect} from 'react';\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\nimport {createAction} from '../store/asyncMethods/PostMethods';\nimport {useDispatch, useSelector} from 'react-redux'\nimport toast, {Toaster} from 'react-hot-toast';\n\n\nconst Create = (props) =>{\n    const { createErrors, redirect } = useSelector((state) => state.PostReducer)\n    const [currentImage, setCurentImage] = useState('Escolher Imagem')\n    const [imagePreview, setImagePreview]=useState('');\n    const dispatch = useDispatch();\n    const {user:{_id, nome}} = useSelector((state) => state.AuthReducer)\n    const fileHandle = e => {\n        if(e.target.files.length!==0){\n        setCurentImage(e.target.files[0].name)\n        setState({\n            ...state,\n            [e.target.name]: e.target.files[0]\n        })\n        const reader = new FileReader();\n        reader.onloadend =() => {\n            setImagePreview(reader.result);\n        }\n        reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    const [state, setState] = useState({\n        title: '',\n        description: '',\n        image: ''\n    });\n    const handleDescription = (e) =>{\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n\n    }\n    const [slug, setSlug] = useState('');\n    const [slugButton, setSlugButton] = useState(false)\n    const slugHandle = (e)  => {\n        setSlugButton(true);\n        setSlug(e.target.value)\n    \n    }\n    const handleURL = e => {\n        setSlug(slug.trim().slipt(' ').join('-'));\n        e.preventDefault();\n    }\n    const handleInput = e => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n    })\n    const createSlug = e.target.value.trim().split(' ').join('-');\n    setSlug(createSlug);\n}\n    const [value, setValue] = useState('');\n   const createPost = (e) =>{\n       e.preventDefault();\n       const {title, description, image} = state;\n       const formData = new FormData();\n       formData.append('title', title);\n       formData.append('body', value);\n       formData.append('image', image)\n       formData.append('description', description)\n       formData.append('slug', slug)\n       formData.append('name', nome)\n       formData.append('id', _id)\n       dispatch(createAction(formData))\n       \n   };\n   useEffect(() => {\n    if(redirect){\n        props.history.push('./dashboard');\n    }   \n    if (createErrors.length !== 0) {\n        createErrors.map((err) => toast.error(err.msg));\n    }\n}, [createErrors, redirect]);\n    \n    return (\n        <div className='create mt-100'>\n            <Helmet>\n                <title>Criando novo post</title>\n                <meta name=\"descrição\" content=\"Criação de post\" />\n            </Helmet>\n            <Toaster \n                position='top-right' \n                reverseOrder={false}\n                toastOptions={{\n                style: {\n                fontSize: '14px',\n                },\n                }}\n            />\n                <div className='container'>\n                <form onSubmit={createPost}>\n                    <div className='row ml-minus-15 mr-minus-15'>\n                        <div className='col-6 p-15'>\n                            <div className='card'>\n                                <h3 className='card_h3'>Criando novo Post</h3>\n                                \n                                    <div className='group'>\n                                        <label htmlFor='title'>Titulo do Post</label>\n                                        <input type='text'\n                                            name='title' \n                                            id='title'\n                                            value={state.name}\n                                            onChange={handleInput}\n                                            className='group_control' \n                                            placeholder='Titulo do post...' />\n                                    </div>\n                                    <div className='group'>\n                                        <label htmlFor='image'\n                                            className='image_label'\n                                            >{currentImage}\n                                        </label>\n                                        <input \n                                            type='file' \n                                            name='image'\n                                            id='image' \n                                            onChange={fileHandle}  />\n                                    </div>\n                                    <div className='group'>\n                                        <label htmlFor='body'>Corpo do Texto</label>\n                                        <ReactQuill \n                                            theme='snow' \n                                            id='body'\n                                            placeholder='Corpo do Texto'\n                                            value={value} \n                                            onChange={setValue} />\n                                    </div>\n                                    <div className='group'>\n                                        <label htmlFor='description'>Meta Descrição</label>\n                                        <textarea \n                                            name='description' \n                                            id='description' \n                                            cols='30' \n                                            rows='10' \n                                            defaultValue={state.description}\n                                            onChange={handleDescription}\n                                            className='group_control'\n                                            placeholder='Meta descirção...'\n                                            maxLength='150'>\n                                        </textarea>\n                                    <p className='length'>  {state.description ? state.description.length : 0}</p> \n                                    </div>\n                                </div>\n                        </div>\n                        <div className='col-6 p-15'>\n                            <div className='card'>\n                                <div className='group'>\n                                    <label htmlFor='slug'>Post URL</label>\n                                    <input \n                                        type='text' \n                                        name='slug' \n                                        id='slug' \n                                        value={slug}\n                                        onChange={slugHandle}\n                                        className='group_control' \n                                        placeholder='Post URL...' \n                                    />\n                                </div>\n                                <div className='group' >\n                                    {slugButton ? (\n                                    <button class='btn btn-default' onClick={handleURL}>Update Slug</button> \n                                    ) : ( \n                                        ''\n                                    )}\n                                </div>\n                                <div className='group'>\n                                    <div className='imagePreview'>\n                                        {imagePreview ? <img src={imagePreview} /> : ''}\n                                    </div>\n                                </div>\n                                <div className='group'>\n                                        <input \n                                            type='submit' \n                                            value='Criando Post'\n                                            className='btn btn-default btn-block' />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default Create;","/home/anderson/blog/client/src/store/asyncMethods/PostMethods.js",["90","91","92"],"import axios from 'axios';\nimport { dispatch } from 'react-hot-toast';\nimport { CREATE_ERRORS, REMOVE_ERRORS, SET_LOADER, CLOSE_LOADER, REDIRECT_TRUE, REDIRECT_FALSE, SET_MENSSAGE, REMOVE_MENSSAGE, SET_POSTS} from '../tipos/PostTypes';\n\nexport const createAction = (postData) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst {\n\t\t\t\tdata: { msg },\n\t\t\t} = await axios.post('/create_post', postData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: REMOVE_ERRORS });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t\tdispatch({ type: SET_MENSSAGE, payload: msg });\n\t\t} catch (error) {\n\t\t\tconsole.log(error.response);\n\t\t\tconst { errors } = error.response.data;\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: CREATE_ERRORS, payload: errors });\n\t\t}\n\t};\n};\n\nexport const fetchPost = (id) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {AuthReducer:{token}} = getState();\n\t\tdispatch({type: SET_LOADER})\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst {data: {response},} = await axios.get(`/posts/${id}`, config)\n\t\t\tdispatch({type: CLOSE_LOADER})\n\t\t\tdispatch({type: SET_POSTS, payload: response})\n\t\t} catch (error) {\n\t\t\tdispatch({type: CLOSE_LOADER});\n\t\t}\n\t}\n}","/home/anderson/blog/client/src/store/tipos/PostTypes.js",[],"/home/anderson/blog/client/src/store/reducers/PostReducer.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":25,"column":7,"nodeType":"99","endLine":25,"endColumn":9,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":84,"column":4,"nodeType":"99","endLine":84,"endColumn":28,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":178,"column":57,"nodeType":"105","endLine":178,"endColumn":83},{"ruleId":"106","severity":1,"message":"107","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":3,"column":81,"nodeType":"108","messageId":"109","endLine":3,"endColumn":95},{"ruleId":"106","severity":1,"message":"111","line":3,"column":111,"nodeType":"108","messageId":"109","endLine":3,"endColumn":126},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id', 'dispatch', 'menssage', and 'redirect'. Either include them or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["115"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'dispatch' is defined but never used.","Identifier","unusedVar","'REDIRECT_FALSE' is defined but never used.","'REMOVE_MENSSAGE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [_id, dispatch, menssage, redirect]",{"range":"120","text":"121"},"Update the dependencies array to be: [createErrors, props.history, redirect]",{"range":"122","text":"123"},[969,971],"[_id, dispatch, menssage, redirect]",[2584,2608],"[createErrors, props.history, redirect]"]